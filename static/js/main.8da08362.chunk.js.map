{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","title","email","defense","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","todos","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"4NAaeA,EAXF,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QAC7B,OACI,sBAAKC,UAAU,kDAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BN,EAA1B,cACtB,gCACI,6BAAKE,IACL,8BAAID,EAAOE,YCcZI,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACA,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CAEIX,GAAIQ,EAAOG,GAAGX,GACdC,MAAOO,EAAOG,GAAGV,MACjBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKdC,EAbG,SAAC,GAAkC,EAAhCC,YAAiC,IAApBC,EAAmB,EAAnBA,aAC9B,OACI,qBAAKV,UAAU,MAAf,SACI,uBACAA,UAAU,mCACVW,KAAK,SACLC,YAAY,kBACZC,SAAYH,OCCTI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCiDJC,G,wDA7CX,aAAc,IAAD,8BACT,gBAkBJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAlBzC,EAAKC,MAAQ,CACTvB,OAAQ,GACRK,YAAa,IAJR,E,gEAQQ,IAAD,OAChBmB,MAAM,8CACLC,MAAM,SAAAC,GACH,OAAOA,EAASC,UAEnBF,MAAK,SAAAG,GACF,EAAKR,SAAS,CAACpB,OAAS4B,S,+BAUpB,IAAD,EACyBC,KAAKN,MAA7BvB,EADD,EACCA,OAAQK,EADT,EACSA,YACVyB,EAAiB9B,EAAO+B,QAAO,SAAAC,GACpC,OAAOA,EAAMvC,MAAMwC,cAAcC,SAAS7B,EAAY4B,kBAEvD,OAAQjC,EAAOmC,OAGP,sBAAKvC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,uBACA,cAAC,EAAD,CAAWU,aAAgBuB,KAAKX,iBAChC,cAAC,EAAD,UACA,cAAC,EAAD,CAAUlB,OAAQ8B,SAN9B,kD,GA/BUM,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACT,cAAC,EAAD,IACEC,SAASC,eAAe,SAU1BX,M","file":"static/js/main.8da08362.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({id, title, email, defense}) => {\r\n    return(\r\n        <div className='tc bg-light-green dib br3 ma2 grow bw2 shadow-5'>\r\n            <img alt='roboimg' src={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>{email}</h2>\r\n                <p>{title}{defense}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n    return(\r\n    <div>\r\n        {\r\n            robots.map((user, i) => {\r\n                return(\r\n                    <Card \r\n                        key={i} \r\n                        id={robots[i].id} \r\n                        title={robots[i].title} \r\n                        email={robots[i].email}\r\n                        />\r\n                );\r\n            })\r\n        }\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n            className='pa3 ba b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder='search Robobuds'\r\n            onChange = {searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height: '600px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList.js';\r\nimport SearchBox from '../components/SearchBox.js';\r\nimport Scroll from '../components/Scroll.js';\r\n// import { robots } from './robots.js';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/todos')\r\n        .then (response=> {\r\n            return response.json();\r\n        })\r\n        .then(todos => {\r\n            this.setState({robots : todos});\r\n        })\r\n        \r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({searchfield: event.target.value})\r\n\r\n    }\r\n\r\n    render()   {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n         return robot.title.toLowerCase().includes(searchfield.toLowerCase());\r\n        })\r\n        return !robots.length ?\r\n        <h1>Loading Bots</h1> :\r\n            (\r\n                <div className='tc'>\r\n                    <h1 className='f1'>RoboBuds!</h1>\r\n                    <SearchBox searchChange = {this.onSearchChange}/>\r\n                    <Scroll>\r\n                    <CardList robots={filteredRobots} />\r\n                    </Scroll>\r\n                </div>     \r\n            ); \r\n        }\r\n\r\n    }\r\n\r\n\r\nexport default App; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App.js'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n<App/>,\n  document.getElementById('root')\n);\n\n\n{/* <React.StrictMode>\n</React.StrictMode> */}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}